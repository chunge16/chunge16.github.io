<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[移动端页面开发适配-rem布局]]></title>
      <url>%2F2016%2F12%2F26%2F%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%A1%B5%E9%9D%A2%E5%BC%80%E5%8F%91%E9%80%82%E9%85%8D-rem%E5%B8%83%E5%B1%80%2F</url>
      <content type="text"><![CDATA[前言：现在的手机终端各式各样，分辨率不同，逻辑像素不同 ，适口不同，所以为了让我们的页面在每个设备上都可以良好的展示，那么就需要为这些设备做统一的处理，这个过程就称为移动端适配，目前基本采用rem布局方式来适配。 在我们给出移动端适配的方法之前，我们首先了解一些基本概念 什么是PPI？PPI全称为Pixel Per Inch，译为每英寸像素取值，更确切的说法应该是像素密度，也就是衡量单位物理面积内拥有像素值的情况。一般来讲PPI越高，显示效果越清晰，当然不是越高越好，过高对图片的适配带来压力。另外，请记住，当我们在谈论一台显示设备的像素密度时，dpi与ppi是等价的 PPI的计算是物理像素除以物理尺寸，一般是采取对角线的数据PPI = 对角线的分辨率/对角线英寸，当然水平和垂直也是可以的。 什么是Pixel（像素）？针对前端开发，像素一般分为2种 物理像素 CSS像素 接下来我会分别解释上面2个概念： 物理像素买手机的时候会有一个 n*m 的分辨率，那是屏幕的n*m个呈像的点，一个点（小方格）为一个物理像素。它是屏幕能显示的最小粒度 CSS像素css的1px 和物理的1px有什么关系呢？？那么CSS中的1px是什么？浏览器是怎么渲染它的？ 网页在一个叫viewport的东西里渲染，可以理解为画布，画布被分成 N x M 个小方格，1个CSS像素，就是其中的一个小方格。 viewport又是什么？网页在viewport上渲染，可以想像在PS上画东西时，上面也有个画布，这个画布分割了 N x M 个方格，N是它的宽度，M是它的高度。宽高都可以任意设置，所以说viewport是虚拟的。假设设置宽度是400，那么浏览器显示区域的横向将被分为400份，CSS的1px占的宽度就是显示区域的 1/400。如果是980，那就是1/980。 viewport = 500 viewport = 900 viewport取不同值时，对布局会产生影响，很明显900的布局缩小了。例如我们只分析用户头像的图片，已知头像宽度是50px。 当viewport宽度为500时，屏幕横向被分为500份，每份1px，所以头像宽度是屏幕的1/10。（500/50=10） 当viewport宽度为900时，屏幕横向被分为900份，每份1px，所以头像宽度是屏幕的1/18。 （900/50=18） 所以，在CSS中，1px是指viewport中的一个小方格，而viewport宽度是可以任意设置的。 怎么合理设置viewport的宽度？viewport的宽度可以是数字和字符串”device-width”。device-width指设备宽度。 当取值为数字时，指不论是什么手机屏幕，viewport都被分为那么多份 当取值为device-width时，指的是手机屏幕的viewport宽度被设置为跟手机宽度一样。 因为很明显device-width的宽度值单位是CSS像素。所以当viewport设置为device-width时，我们必须明白一个概念就是：DevicePixelRatio DevicePixelRatio定义如下： window.devicePixelRatio = physical pixels / dips 分母dips全称为device-independent pixels，译为与设备无关像素。 更通俗的说应为与物理像素无关的CSS像素。 devicePixelRatio说白了就是手机的物理像素与实际使用像素的缩放比。 例如：某台安卓手机，分辨率是 1920*1080，屏幕对象线是5英寸。那么在这台手机上1个CSS像素，占了多少个物理像素？ 第一步：勾股定理算出对角线的分辨率，即 √(1920²+1080²)≈2203px 第二步：算出dpi。对角线的分辨率/对角线英寸 = 2203/5≈440dpi 第三步：得出转换系数。根据上面的图片，安卓手机440dpi，属于XXHDPI，转换系数是3 因此这台手机中，1个CSS像素 = 3*物理像素。即1个CSS像素占了3个物理像素。 这个转换系数，也等同于dpr，设备像素比。 该台安卓手机的device-width是1080/3 = 360，即viewport的宽度是 360 CSS像素。 注意devicePixelRatio并非是一个默认值。在默认情况下CSS像素是由手机默认的缩放决定的。但同时因为浏览器页面也可以被人为的进行缩放。比如iPhon4中默认的分辨率宽度为320px。浏览网页时我们完全可以自行放大两倍为160px。这样以来window.devicePixelRatio就变味了 640 / 160 = 4。通过改变dips而改变dpr. 多屏适配布局问题？业内比较流行的做法（参考阿里的flexible）阿里的flexible 基于rem的原理，针对不同手机屏幕尺寸和dpr动态的改变根节点html的font-size大小(基准值)。 设置viewport为设备宽度（这里不一定，但目前先这样足矣） 将viewport分成10rem，并计算出1rem在当前浏览器的像素值，把它赋予html标签的font-size（分成10rem只是为了方便计算而已,同时为了以后vw和vh） 写CSS代码时，遇到要适配的地方，比如width，margin，padding等，就不要再用px了，改成用rem 最后字体大小问题，一般还是基于dpr使用px 对于字体缩放问题，设计师原本的要求是这样的：任何手机屏幕上字体大小都要统一，所以我们针对不同的分辨率(dpr不同)，会做如下处理：1234font-size: 16px;[data-dpr=&quot;2&quot;] input &#123; font-size: 32px;&#125; (注意，字体不可以用rem，误差太大了，且不能满足任何屏幕下字体大小相同) 参考文章 移动适配-移动Web怎么做屏幕适配（三） 浅谈移动Web开发（上）：深入概念 移动端高清、多屏适配方案]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[爆裂鼓手观后感]]></title>
      <url>%2F2016%2F12%2F18%2F%E7%88%86%E8%A3%82%E9%BC%93%E6%89%8B%2F</url>
      <content type="text"><![CDATA[前言：比你牛逼的人比你还努力！！！ 首先这部电影在评价上有很多分歧，但是大家基本都认为这是一部还不错的电影，不管是技巧和艺术价值上。有巨大的分歧，说明电影让观众得到了不同的感受，这是成功的。正如一千个读者就有一千个哈姆雷特。 其次，我个人认为追求价值和梦想时，背后往往是黑暗、孤独等很多负面的东西，因为现实往往是残酷的。这点是大多数人应该认可的，当然不乏有天赋的人并没有经历这残酷的事实同样也获得个人价值的提升，但是有天赋的人毕竟是少数。 最后对我而言，让我觉得大多数的人（包括我自己）对梦想和个人价值的追求根本谈不上努力，看看安德鲁就知道了，那是要付出血的代价！！！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[科班狗的前端之路]]></title>
      <url>%2F2016%2F11%2F05%2F%E7%A7%91%E7%8F%AD%E7%8B%97%E7%9A%84%E5%89%8D%E7%AB%AF%E4%B9%8B%E8%B7%AF%2F</url>
      <content type="text"><![CDATA[前言：面试成功后余老师希望我和大家分享一下个人经历，群里也有很多朋友私信我，希望分享一下个人学习经历，所以自己单独写一篇文章和大家一起学习交流。才疏学浅，菜鸟一只，求轻拍！！！ 一、前端学习之路我是今年毕业的科班狗，大学“不务正业”对MOOC感兴趣，从而接触到前端开发。最开始是看视频学习，后面发现视频学习太慢了，上万能的知乎寻找学习方法，发现这个零基础的前端开发初学者应如何系统地学习的回答 ，也是这个回答了解到FCC，所以是缘分啊。其次觉得需要通过实际动手操作来获得提高，所以找到百度前端技术学院，这里面的项目真的很好，由浅入深地在实践中掌握技术，基本可以掌握了解、认识、学习、掌握HTML、CSS和JavaScript。最后通过余老师的在上面的回答了解到FCC，真是大开眼界，里面课程丰富、教学合理、理念优秀。另外建议看看余老师的知乎专栏，构建自己散乱的前端知识体系并且从中提高自己在其中的不足。 二、求职1.简历私信时有同学说，我刚毕业没工作经验，简历压根没人看。是的，我刚开始也是这样，一周内根本没人搭理我。所以简历在撬开面试的大门很重要，它可以理解为敲门砖，公司招聘时人事应该是通过技术主管的要求去筛选简历，即使你很有实力，但是人事找不到相关要求关键词的话，抱歉你可能连面试的机会都没有。 简历不能写什么？通过招聘信息总结，看看大部分招聘公司不喜欢的招聘要求有哪些。例如，社会招聘中你写应届生，可能就没什么面试机会。有的同学说我不想说谎，是就是，不是就不是，我承认诚信很重要，但是这个社会招聘环境就是这样，如果你不能改变它，就只能适应它。不说谎，你可以取巧，例如要求计算机相关专业出身，结果你是文科，那么我建议你不写专业，就写学历和毕业院校，这是避免短处。 简历写什么？同样的方式，看看招聘公司需要哪些技能并且与自己匹配，如果有就写上去，突出自己的能力。另外具体如何去书写，请看看余老师的文章前端开发者如何写好简历 总结：简历内容需要扬长避短，突出自己的特长，一句话就是吸引HR的眼球打开面试大门。 2.招聘网站下面的回答内容针对招聘网站有很详细的说明，建议大家可以看看。我个人使用智联招聘、前程无忧、拉钩、猎聘和boss直聘。其中智联和无忧可以海投，好处简单粗暴，坏处是针对性不强效率不高。拉钩针对有一定工作经验的应聘人会好一些，但是也有一些机会，所以不能放弃。另外，个人建议使用招聘网站的个人服务，比如花钱简历置顶什么的，还是会增加面试的机会的。boss直聘针对移动端，比较方便，而已可以和招聘主管直接沟通，针对性很强，效率很高。找工作，我建议基本都可以去使用和投递。 找工作是去智联招聘、前程无忧，还是 58 、赶集？ 三、面试首先推荐一篇文章，写的真的很好，文章提供一种很好的面试思路，你不必完全按照里面的技巧去使用，体会里面的面试思维方式并且举一反三。我自己面试基本遇到的都是这些问题，不过形式大同小异，所以大家理解这里的思路足够了。一般来讲是人事进行初面，就是大概了解你的基本素养和让你做面试题，例如你表达和沟通能力，但是也有公司是技术主管直接面试。谁面试没有关系，首先你和公司是一个平等位置，你有权选择他，他有权选择你，自己不要觉得弱势，保持你的自信，大声说出自己的名字，清楚说明每一句话。 1.自我介绍相当自豪介绍自己的基本情况，在这个问题里，你要体现自己的优势部分，例如我大学成绩优异，我获得什么编程比赛好名次之类的。 2.项目描述如果你实际项目经历，面试官希望你大概描述项目基本情况，项目的周期，项目团队人数，你的项目职责，个人而言项目中遇到什么问题，是怎么解决的。回答要体现自己的主动性和团队协作能力。如果是你自己的项目，给面试官展示一下，这样面试官方便向你提问（不然面试官也是不知道问什么，最怕空气突然安静），描述自己项目基本情况，运用哪些技术，自己如何解决遇到的问题，这部分自己写的代码基本没什么问题。 3.离职原因一个基本原则：不要说前公司不好（即使有，还是不要说） 其他理由，1.项目团队解散。2.女朋友 3.公司搬家 4.技术问题会就是会，不会就是不会。但是建议不会的部分，如果有机会，可以当场让面试官给你解答，体现对知识渴望和敬畏，每次笔试完，你可以拍照不会的问题，回去自己看看哪里不会。 5.个人发展规划这个看似开放，其实不然，千万不要说做管理什么之类。说发展规划，只是想知道你是否清楚明白自己在接下来往哪个方向走。前端你可以说，我想看看框架的源码、深入学习JavaScript语言、想去了解数据可视化等等之类，体现自己对前端知识深入了解程度和追求。 6.对公司有什么想要了解的自己千万不要说没有。问清楚公司的团队有多少人，主要做什么，这个岗位的职责是什么，现在的系统有没有上线，Boss是什么背景，公司的发展规划是什么。差不多问2个问题，这样体现你自己的水平。 7.期望薪水和入职时间期望薪水：给出一个范围，最高你希望多少，最低可以接受多少。不过一般而言，人事如果给你发offer,基本会在最低的要求上加一些，一般1K不等。 入职时间：给个准确入职时间，公司当然愿意你越早越好，这个看自己情况，如果想晚点，自己说明合理的原因获得人事同意，以公司意愿为主。 8.个人建议面试时，注意面试官的表述语句，你需要从中抓取关键信息，看看公司具体的需求，自己的回答得基本满足公司的需求，比如：你现在住哪里？你的回答应该围绕你不会影响你上班时间和对工作影响。还有就是，注意观察面试官的肢体动作和微表情，这些能体现他对你的回答的反馈信息，例如，你在回答时面试官一直翻阅简历，估计对你的回答不够满意，或者面试官一直和你有眼光交流，那你回答很对他的口味，哎呦，你有戏哦。 技术面试的时候该怎么样介绍自己？ 四、个人体会找工作还是蛮辛苦，不过话说回来，有什么事情是不辛苦的吗？首先一开始可能很困难，但是自己要相信自己，在每次面试后总结分析自己的问题，其次坚持下去，别放弃（鸡汤味有点浓了~~~），最后希望学习前端的同学们找到自己的理想工作！ 五、参考链接知乎 零基础的前端开发初学者应如何系统地学习? 找工作是去智联招聘、前程无忧，还是 58 、赶集？ IT修真院-xdyl 技术面试的时候该怎么样介绍自己？ 百度前端技术学院 百度前端技术学院 余博伦 知乎专栏 前端开发者如何写好简历]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F11%2F05%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
